{"version":3,"sources":["images/golden-gate.png","images/mountain.png","components/Card/Card.js","App.js","reportWebVitals.js","index.js"],"names":["ItemCard","props","itemSrc","price","useEffect","console","log","bridge","GoldenGate","Mountain","Card","style","width","Img","variant","src","Body","className","Text","heading","subheading","toLocaleString","App","Inventory","map","item","index","Heading","Subheading","Price","showBridge","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ysCAAe,MAA0B,wCCA1B,MAA0B,qCCsC1BA,MAjCf,SAAkBC,GAOd,IAAIC,EAKiBC,EAIrB,OAdAC,qBAAU,WAENC,QAAQC,IAAIL,MAKFC,EADKD,EAAMM,OACDC,EAAyBC,EAQ7C,eAACC,EAAA,EAAD,CAAMC,MAAO,CAAEC,MAAO,SAAtB,UACI,cAACF,EAAA,EAAKG,IAAN,CAAUC,QAAQ,MAAMC,IAAKb,IAC7B,eAACQ,EAAA,EAAKM,KAAN,CAAWC,UAAU,YAArB,UACI,cAACP,EAAA,EAAKQ,KAAN,CAAWD,UAAU,4BAArB,SAAkDhB,EAAMkB,UACxD,cAACT,EAAA,EAAKQ,KAAN,CAAWD,UAAU,4BAArB,SACIhB,EAAMmB,aAGV,uBACA,eAACV,EAAA,EAAKQ,KAAN,CAAWD,UAAU,2BAArB,eAdSd,EAcqDF,EAAME,MAbrDA,EAAMkB,eAAe,iB,OCJrCC,MAVf,WACE,OACE,qBAAKL,UAAU,MAAf,SACGM,EAAUC,KAAI,SAACC,EAAMC,GAAP,OACf,cAAC,EAAD,CAAUP,QAASM,EAAKE,QAASP,WAAYK,EAAKG,WAAYzB,MAAOsB,EAAKI,MAAOtB,OAAQkB,EAAKK,mBCIrFC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d4ad3670.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/golden-gate.7c004702.png\";","export default __webpack_public_path__ + \"static/media/mountain.be8b2578.png\";","import Card from 'react-bootstrap/Card';\nimport GoldenGate from '../../images/golden-gate.png'\nimport Mountain from '../../images/mountain.png'\nimport React, { useEffect } from 'react'\n\nfunction ItemCard(props) {\n\n    useEffect(() => {\n        \n        console.log(props)\n    })\n\n    let itemSrc;\n    const showBridge = props.bridge;\n    showBridge ? (itemSrc = GoldenGate) : (itemSrc = Mountain)\n\n\n    function formatPrice(price) {\n        const formattedPrice = price.toLocaleString('en')\n        return formattedPrice\n    }\n    return (\n        <Card style={{ width: '18rem' }}>\n            <Card.Img variant=\"top\" src={itemSrc} />\n            <Card.Body className=\"card-body\">\n                <Card.Text className=\"card-heading text-left h4\">{props.heading}</Card.Text>\n                <Card.Text className=\"card-subheading text-left\">{\n                    props.subheading\n                }\n                </Card.Text>\n                <hr />\n                <Card.Text className=\"card-price text-right h5\">${formatPrice(props.price)}</Card.Text>\n            </Card.Body>\n        </Card>\n    )\n\n}\n\nexport default ItemCard;","import './App.css';\nimport ItemCard from './components/Card/Card'\nimport Inventory from './UIE-InterviewProject.json'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {Inventory.map((item, index) =>\n      <ItemCard heading={item.Heading} subheading={item.Subheading} price={item.Price} bridge={item.showBridge}/>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}